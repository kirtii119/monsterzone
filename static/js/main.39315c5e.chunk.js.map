{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Search","setSearch","className","type","placeholder","onChange","event","target","value","class","Data","filter","mons","name","toLowerCase","includes","username","map","index","style","width","height","src","image","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w0JAoDeA,MA/Cf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAKC,UAAU,MAAf,UAIE,uBACEC,KAAK,OACLC,YAAY,SACZC,SAAU,SAACC,GACTL,EAAUK,EAAMC,OAAOC,UAI3B,qBAAKC,MAAM,QAAX,SACGC,EAAKC,QAAO,SAACC,GACZ,MAAc,IAAVZ,GAEFY,EAAKC,KAAKC,cAAcC,SAASf,EAAOc,gBACxCF,EAAKI,SAASF,cAAcC,SAASf,EAAOc,eAHrBF,OACpB,KAKJK,KAAI,SAACL,EAAMM,GACZ,OACE,8BAEE,sBACET,MAAM,OACNU,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAFnC,UAGE,qBAAKZ,MAAM,eAAea,IAAKV,EAAKW,QACpC,sBAAKd,MAAM,OAAOU,MAAO,CAAEK,gBAAiB,WAA5C,UACE,oBAAIf,MAAM,aAAV,SAAwBG,EAAKC,OAC7B,mBAAGJ,MAAM,YAAT,SAAsBG,EAAKI,4BC3B9BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39315c5e.chunk.js","sourcesContent":["import './App.css';\nimport Data from \"./data.json\";\nimport { useState } from \"react\";\n//import monster from './monsterbg.jpeg'\n\nfunction App() {\n  const [Search, setSearch] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n\n   {/* <div style={{  width: \"100%\", backgroundImage: `url(${monster})`, backgroundSize: 'cover', }}> */}\n\n      <input\n        type=\"text\"\n        placeholder=\"SEARCH\"\n        onChange={(event) => {\n          setSearch(event.target.value);\n        }}\n      />\n      \n      <div class=\"cards\">\n        {Data.filter((mons) => {\n          if (Search == \"\") return mons;\n          else if (\n            mons.name.toLowerCase().includes(Search.toLowerCase()) ||\n            mons.username.toLowerCase().includes(Search.toLowerCase())\n          )\n            return mons;\n        }).map((mons, index) => {\n          return (\n            <div>\n              \n              <div\n                class=\"card\"\n                style={{ width: \"22rem\", height: \"25rem\" }}>\n                <img class=\"card-img-top\" src={mons.image} />\n                <div class=\"card\" style={{ backgroundColor: \"#FFFF00\" }}>\n                  <h3 class=\"card-title\">{mons.name}</h3>\n                  <p class=\"card-text\">{mons.username}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      \n    {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}